/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ipl_project;

/**
 *
 * @author hp
 */
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
public class Searching1 extends javax.swing.JFrame {

    /**
     * Creates new form Searching1
     */
    public Searching1() {
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(null);

        jTextField1.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(490, 130, 210, 40);

        jTable1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "RUNS", "MATCHES", "TEAM", "WICKETS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionBackground(new java.awt.Color(255, 200, 0));
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(90, 260, 610, 130);

        jButton11.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jButton11.setText("CLEAR");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton11);
        jButton11.setBounds(380, 490, 75, 29);

        jButton13.setBackground(new java.awt.Color(255, 255, 255));
        jButton13.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jButton13.setText("X");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton13);
        jButton13.setBounds(740, 20, 43, 29);

        jButton8.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jButton8.setText("MAIN MENU");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);
        jButton8.setBounds(90, 490, 119, 29);

        jButton9.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jButton9.setText("GO BACK");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9);
        jButton9.setBounds(250, 490, 93, 29);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabel2.setText("NAME OF THE PLAYER");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(90, 130, 265, 34);

        jButton10.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jButton10.setText("NEXT(TEAM DATABASE)");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10);
        jButton10.setBounds(500, 490, 201, 29);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 36)); // NOI18N
        jLabel4.setText("PLAYER RECORDS");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(240, 20, 320, 51);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ipl_project/green.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 800, 600);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
        String Playername=jTextField1.getText();
        if (Playername.isEmpty())
        {
            jButton11.doClick();
        }
        else
        {
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            int rows =model.getRowCount();
            if(rows>0)
            {
                for(int i=0;i<rows;i++)
                {
                    model.removeRow(0);
                }
            }
            String Name=jTextField1.getText();
            try
            {
                Class.forName("java.sql.Driver");
                Connection
                con= DriverManager.getConnection("jdbc:mysql://localhost/ipl","root","mohalo");
                Statement stmt =con.createStatement();
                String sql1="Select * from O_cap1 where name like'%"+Name+"%';";
                String sql2="Select * from O_cap2 where name like'%"+Name+"%';";
                String sql3="Select * from O_cap3 where name like'%"+Name+"%';";
                String sql4="Select * from O_cap4 where name like'%"+Name+"%';";
                String sql5="Select * from O_cap5 where name like'%"+Name+"%';";
                String sql6="Select * from O_cap6 where name like'%"+Name+"%';";
                String sql7="Select * from P_cap1 where name like'%"+Name+"%';";
                String sql8="Select * from P_cap2 where name like'%"+Name+"%';";
                String sql9="Select * from P_cap3 where name like'%"+Name+"%';";
                String sql10="Select * from P_cap4 where name like'%"+Name+"%';";
                String sql11="Select * from P_cap5 where name like'%"+Name+"%';";
                String sql12="Select * from P_cap6 where name like'%"+Name+"%';";

                ResultSet rs1=stmt.executeQuery(sql1);

                while(rs1.next())
                {
                    Object name= rs1.getString("name");
                    Object Runs =rs1.getString("Runs");
                    Object Matches =rs1.getString("Matches");
                    Object Team =rs1.getString("Team");

                    model.addRow(new Object[]{name,Runs,Matches,Team,null} );
                }
                ResultSet rs2=stmt.executeQuery(sql2);

                while(rs2.next())
                {
                    Object name=rs2.getString("name");
                    Object Runs =rs2.getString("Runs");
                    Object Matches =rs2.getString("Matches");
                    Object Team =rs2.getString("Team");

                    model.addRow(new Object[]{name,Runs,Matches,Team,null} );
                }
                ResultSet rs3=stmt.executeQuery(sql3);
                while(rs3.next())
                {
                    Object name=rs3.getString("name");
                    Object Runs =rs3.getString("Runs");
                    Object Matches =rs3.getString("Matches");
                    Object Team =rs3.getString("Team");

                    model.addRow(new Object[]{name,Runs,Matches,Team,null} );
                }

                ResultSet rs4=stmt.executeQuery(sql4);

                while(rs4.next())
                {
                    Object name=rs4.getString("name");
                    Object Runs =rs4.getString("Runs");
                    Object Matches =rs4.getString("Matches");
                    Object Team =rs4.getString("Team");

                    model.addRow(new Object[]{name,Runs,Matches,Team,null} );
                }
                ResultSet rs5=stmt.executeQuery(sql5);

                while(rs5.next())
                {
                    Object name=rs5.getString("name");
                    Object Runs =rs5.getString("Runs");
                    Object Matches =rs5.getString("Matches");
                    Object Team =rs5.getString("Team");

                    model.addRow(new Object[]{name,Runs,Matches,Team,null} );
                }
                ResultSet rs6=stmt.executeQuery(sql6);
                while(rs6.next())
                {
                    Object name=rs6.getString("name");
                    Object Runs =rs6.getString("Runs");
                    Object Matches =rs6.getString("Matches");
                    Object Team =rs6.getString("Team");

                    model.addRow(new Object[]{name,Runs,Matches,Team,null} );
                }
                ResultSet rs7=stmt.executeQuery(sql7);

                while(rs7.next())
                {
                    Object name= rs7.getString("name");
                    Object Wickets =rs7.getString("Wickets");
                    Object Matches =rs7.getString("Matches");
                    Object Team =rs7.getString("Team");

                    model.addRow(new Object[]{name,null,Matches,Team,Wickets} );
                }
                ResultSet rs8=stmt.executeQuery(sql8);

                while(rs8.next())
                {
                    Object name=rs8.getString("name");
                    Object Wickets =rs8.getString("Wickets");
                    Object Matches =rs8.getString("Matches");
                    Object Team =rs8.getString("Team");

                    model.addRow(new Object[]{name,null,Matches,Team,Wickets} );
                }
                ResultSet rs9=stmt.executeQuery(sql9);
                while(rs9.next())
                {
                    Object name=rs9.getString("name");
                    Object Wickets =rs9.getString("Wickets");
                    Object Matches =rs9.getString("Matches");
                    Object Team =rs9.getString("Team");

                    model.addRow(new Object[]{name,null,Matches,Team,Wickets} );
                }

                ResultSet rs10=stmt.executeQuery(sql10);

                while(rs10.next())
                {
                    Object name=rs10.getString("name");
                    Object Wickets =rs10.getString("Wickets");
                    Object Matches =rs10.getString("Matches");
                    Object Team =rs10.getString("Team");

                    model.addRow(new Object[]{name,null,Matches,Team,Wickets} );
                }
                ResultSet rs11=stmt.executeQuery(sql11);

                while(rs11.next())
                {
                    Object name=rs11.getString("name");
                    Object Wickets =rs11.getString("Wickets");
                    Object Matches =rs11.getString("Matches");
                    Object Team =rs11.getString("Team");

                    model.addRow(new Object[]{name,null,Matches,Team,Wickets} );
                }
                ResultSet rs12=stmt.executeQuery(sql12);
                while(rs12.next())
                {
                    Object name=rs12.getString("name");
                    Object Wickets =rs12.getString("Wickets");
                    Object Matches =rs12.getString("Matches");
                    Object Team =rs12.getString("Team");

                    model.addRow(new Object[]{name,null,Matches,Team,Wickets} );
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
        }
    }//GEN-LAST:event_jTextField1CaretUpdate

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        int rows;
        rows=jTable1.getRowCount();
        DefaultTableModel
        Model=(DefaultTableModel)jTable1.getModel();
        for(int i=0;i<rows;i++)
        {
            Model.removeRow(0);
        }
        jTextField1.setText(null);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        int l;
        l=JOptionPane.showConfirmDialog(this,"ARE YOU SURE YOU WANT TO QUIT", "IPL", JOptionPane.YES_NO_OPTION);
        if(l==0)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        dispose();
        new Main_PageA();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        dispose();
        new Searching();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        dispose();
        new Searching2();
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Searching1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Searching1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Searching1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Searching1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Searching1().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
